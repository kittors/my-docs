const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":16,\"nextId\":16,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"5\",\"5\":\"5#缘故\",\"6\":\"5#思考🤔\",\"7\":\"5#解决方案\",\"8\":\"5#环境配置\",\"9\":\"5#pnpm缓存备份\",\"10\":\"5@0\",\"11\":\"6\",\"12\":\"6#缘故\",\"13\":\"6#解决方案\",\"14\":\"6@0\",\"15\":\"7\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,10],\"1\":[2],\"2\":[2],\"3\":[2],\"4\":[9],\"5\":[1,53],\"6\":[2,90],\"7\":[1],\"8\":[2,81],\"9\":[3,67],\"10\":[null,null,3],\"11\":[10],\"12\":[1,93],\"13\":[1,31],\"14\":[null,null,4],\"15\":[0,4]},\"averageFieldLength\":[2.71875,38.170918367346935,0.5212121212121212],\"storedFields\":{\"0\":{\"h\":\"个人介绍\",\"t\":[\"喜欢瞎折腾，对VPS、软路由、编程感兴趣\"]},\"1\":{\"h\":\"地球回忆\"},\"2\":{\"h\":\"搞机日志\"},\"3\":{\"h\":\"编程随想\"},\"4\":{\"h\":\"如何在一个内网环境下安装前端依赖\"},\"5\":{\"h\":\"缘故\",\"t\":[\"最近我接触一个项目，因为数据安全要求比较高，主管给我分配的电脑并没有接入到互联网（外网环境），但是却需要在这个电脑上开发项目，并且我询问主管是否公司有在内网建有私有的镜像源，类似淘宝镜像源，不然很难安装依赖，得到的答复是并没有。\"]},\"6\":{\"h\":\"思考🤔\",\"t\":[\"我首先想到的方式是直接将能连接互联网的电脑上的同一个项目的node_modules直接copy到安全优盘，然后通过优盘这样的硬件拷贝到电脑上。 我尝试了下，但是这样的方式显然并不是很优雅。而且我开发的这个项目是基于pnpm，node_modules中并不仅仅有依赖，还有各种依赖的缓存数据等等，尝试了下，明明node_modules中有对应的依赖信息，并且检查了lock.yaml文件，也确实一些关键信息也存在，但是移植到开发主机的项目中，最终的结果依然提示部分的modules not find的信息。很显然我忽略了什么。 有没有直接将包下载到本地或者通过一种本地镜像的方式下载依赖呢？ 下面就是我的解决方案。\"]},\"7\":{\"h\":\"解决方案\"},\"8\":{\"h\":\"环境配置\",\"t\":[\"首先我需要在开发主机中全局安装 pnpm（开发主机连基本的依赖环境也没有，node 我通过tar文件安装了，并配置好了全局变量）\",\"通过以下的命令，将pnpm包下载到本地\",\"npm pack pnpm\",\"可以执行命令的文件路径找到 pnpm-XXX.tgz 包文件\",\"将这个包拷贝到开发主机的目录中，在开发主机执行\",\"npm install --global pnpm-XXX.tgz\",\"将安装对应版本的pnpm 包管理工具。\",\"通过以上的环境安装的方式，似乎已经想到一种方式了，就是一个包一个包的下载到本地，然后全部copy到开发主机中，就可以进行对应的包安装，一个一个的安装，显然这样的方式非常不优雅。下面我将介绍一个更加方便的方式。\"]},\"9\":{\"h\":\"pnpm缓存备份\",\"t\":[\"其实我们只需要有项目的所有的package.json就可以执行pnpm i 安装所有的依赖包，同时pnpm 会将包的下载文件缓存部分到本地中，这样我们在开发别的项目的时候，就可以直接从本地缓存中快速的为项目安装依赖，这也是pnpm 有时候安装的时候非常快速的原因。\",\"通过以下的命令查询当前主机的pnpm的缓存路径\",\"pnpm store path\",\"然后将当前的pnpm 缓存copy到开发主机中，再在开发主机中执行 pnpm i就可以直接通过缓存安装依赖了，并且十分的快速。 这样就解决了脱网安装前端依赖的问题。\"]},\"10\":{\"c\":[\"pnpm\",\"npm\"]},\"11\":{\"h\":\"通过CloudFlare SaaS给自己的小网站加速\"},\"12\":{\"h\":\"缘故\",\"t\":[\"我的小网站一直是部署在vercel上，可是vercel竟然在最近被防火墙给墙了，部署的网站无法正常访问，所以我就给它套了一层cloudflare的cdn，但是访问速度也十分感人，如果被分配的cloudflare节点ip也是被墙的，那么将会出现网站访问失败的情况\",\"基于以上的原因，我开始找寻怎么加速我的小网站的方式，当然最好是免费的方式，首先想到的是通过购买国内的CDN服务，可是服务费用对我来说还是太贵了，毕竟我只是部署了一个文档静态网站，如果被别有意图的人，疯狂的DDOS攻击的话，可能会让我花很多钱，而且已经有这样的悲惨案例，个人的小网站被攻击的情况。\"]},\"13\":{\"h\":\"解决方案\",\"t\":[\"现在已经有了免费的方案，就是通过cloudflare自己的SaaS服务，去白嫖一些公共CNAME的cloudflare节点配置，从而加速自己的网站的访问。\",\"以下是原理图\"]},\"14\":{\"c\":[\"cloudflare\",\"SaaS\",\"CDN\"]},\"15\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"found\",{\"1\":{\"15\":1}}],[\"find\",{\"1\":{\"6\":1}}],[\"404\",{\"1\":{\"15\":1}}],[\"原理图\",{\"1\":{\"13\":1}}],[\"原因\",{\"1\":{\"9\":1,\"12\":1}}],[\"公共\",{\"1\":{\"13\":1}}],[\"公司\",{\"1\":{\"5\":1}}],[\"嫖\",{\"1\":{\"13\":1}}],[\"白\",{\"1\":{\"13\":1}}],[\"去\",{\"1\":{\"13\":1}}],[\"现在\",{\"1\":{\"13\":1}}],[\"案例\",{\"1\":{\"12\":1}}],[\"悲惨\",{\"1\":{\"12\":1}}],[\"钱\",{\"1\":{\"12\":1}}],[\"花\",{\"1\":{\"12\":1}}],[\"让\",{\"1\":{\"12\":1}}],[\"攻击\",{\"1\":{\"12\":2}}],[\"ddos\",{\"1\":{\"12\":1}}],[\"疯狂\",{\"1\":{\"12\":1}}],[\"人\",{\"1\":{\"12\":1}}],[\"意图\",{\"1\":{\"12\":1}}],[\"静态\",{\"1\":{\"12\":1}}],[\"文档\",{\"1\":{\"12\":1}}],[\"文件\",{\"1\":{\"6\":1,\"8\":3,\"9\":1}}],[\"毕竟\",{\"1\":{\"12\":1}}],[\"太贵\",{\"1\":{\"12\":1}}],[\"还是\",{\"1\":{\"12\":1}}],[\"还有\",{\"1\":{\"6\":1}}],[\"来说\",{\"1\":{\"12\":1}}],[\"费用\",{\"1\":{\"12\":1}}],[\"服务\",{\"1\":{\"12\":2,\"13\":1}}],[\"国内\",{\"1\":{\"12\":1}}],[\"购买\",{\"1\":{\"12\":1}}],[\"免费\",{\"1\":{\"12\":1,\"13\":1}}],[\"当然\",{\"1\":{\"12\":1}}],[\"当前\",{\"1\":{\"9\":2}}],[\"怎么\",{\"1\":{\"12\":1}}],[\"找寻\",{\"1\":{\"12\":1}}],[\"找到\",{\"1\":{\"8\":1}}],[\"开始\",{\"1\":{\"12\":1}}],[\"开发\",{\"1\":{\"5\":1,\"6\":2,\"8\":5,\"9\":3}}],[\"情况\",{\"1\":{\"12\":2}}],[\"失败\",{\"1\":{\"12\":1}}],[\"出现\",{\"1\":{\"12\":1}}],[\"那么\",{\"1\":{\"12\":1}}],[\"节点\",{\"1\":{\"12\":1,\"13\":1}}],[\"如果\",{\"1\":{\"12\":2}}],[\"如何\",{\"0\":{\"4\":1}}],[\"感人\",{\"1\":{\"12\":1}}],[\"感兴趣\",{\"1\":{\"0\":1}}],[\"套\",{\"1\":{\"12\":1}}],[\"它\",{\"1\":{\"12\":1}}],[\"所以\",{\"1\":{\"12\":1}}],[\"所有\",{\"1\":{\"9\":2}}],[\"访问速度\",{\"1\":{\"12\":1}}],[\"访问\",{\"1\":{\"12\":2,\"13\":1}}],[\"正常\",{\"1\":{\"12\":1}}],[\"无法\",{\"1\":{\"12\":1}}],[\"墙\",{\"1\":{\"12\":2}}],[\"防火墙\",{\"1\":{\"12\":1}}],[\"被别\",{\"1\":{\"12\":1}}],[\"被\",{\"1\":{\"12\":4}}],[\"竟然\",{\"1\":{\"12\":1}}],[\"可能\",{\"1\":{\"12\":1}}],[\"可是\",{\"1\":{\"12\":2}}],[\"可以\",{\"1\":{\"8\":2,\"9\":3}}],[\"vercel\",{\"1\":{\"12\":2}}],[\"vps\",{\"1\":{\"0\":1}}],[\"部署\",{\"1\":{\"12\":3}}],[\"部分\",{\"1\":{\"6\":1,\"9\":1}}],[\"加速\",{\"0\":{\"11\":1},\"1\":{\"12\":1,\"13\":1}}],[\"小\",{\"0\":{\"11\":1},\"1\":{\"12\":3}}],[\"自己\",{\"0\":{\"11\":1},\"1\":{\"13\":2}}],[\"saas\",{\"0\":{\"11\":1},\"1\":{\"13\":1},\"2\":{\"14\":1}}],[\"store\",{\"1\":{\"9\":1}}],[\"cname\",{\"1\":{\"13\":1}}],[\"cdn\",{\"1\":{\"12\":2},\"2\":{\"14\":1}}],[\"cloudflare\",{\"0\":{\"11\":1},\"1\":{\"12\":2,\"13\":2},\"2\":{\"14\":1}}],[\"copy\",{\"1\":{\"6\":1,\"8\":1,\"9\":1}}],[\"问题\",{\"1\":{\"9\":1}}],[\"脱网\",{\"1\":{\"9\":1}}],[\"解决\",{\"1\":{\"9\":1}}],[\"解决方案\",{\"0\":{\"7\":1,\"13\":1},\"1\":{\"6\":1}}],[\"十分\",{\"1\":{\"9\":1,\"12\":1}}],[\"再\",{\"1\":{\"9\":1}}],[\"查询\",{\"1\":{\"9\":1}}],[\"为\",{\"1\":{\"9\":1}}],[\"快速\",{\"1\":{\"9\":3}}],[\"从而\",{\"1\":{\"13\":1}}],[\"从\",{\"1\":{\"9\":1}}],[\"时候\",{\"1\":{\"9\":2}}],[\"别的\",{\"1\":{\"9\":1}}],[\"会\",{\"1\":{\"9\":1,\"12\":1}}],[\"同时\",{\"1\":{\"9\":1}}],[\"同一个\",{\"1\":{\"6\":1}}],[\"ip\",{\"1\":{\"12\":1}}],[\"i\",{\"1\":{\"9\":2}}],[\"install\",{\"1\":{\"8\":1}}],[\"json\",{\"1\":{\"9\":1}}],[\"只是\",{\"1\":{\"12\":1}}],[\"只\",{\"1\":{\"9\":1}}],[\"其实\",{\"1\":{\"9\":1}}],[\"备份\",{\"0\":{\"9\":1}}],[\"缓存\",{\"0\":{\"9\":1},\"1\":{\"9\":5}}],[\"缓存数据\",{\"1\":{\"6\":1}}],[\"方案\",{\"1\":{\"13\":1}}],[\"方便\",{\"1\":{\"8\":1}}],[\"方式\",{\"1\":{\"6\":3,\"8\":4,\"12\":2}}],[\"更加\",{\"1\":{\"8\":1}}],[\"非常\",{\"1\":{\"8\":1,\"9\":1}}],[\"进行\",{\"1\":{\"8\":1}}],[\"就\",{\"1\":{\"8\":1,\"9\":4,\"12\":1}}],[\"就是\",{\"1\":{\"6\":1,\"8\":1,\"13\":1}}],[\"全部\",{\"1\":{\"8\":1}}],[\"全局变量\",{\"1\":{\"8\":1}}],[\"全局\",{\"1\":{\"8\":1}}],[\"已经\",{\"1\":{\"8\":1,\"12\":1,\"13\":1}}],[\"似乎\",{\"1\":{\"8\":1}}],[\"以上\",{\"1\":{\"8\":1,\"12\":1}}],[\"以下\",{\"1\":{\"8\":1,\"9\":1,\"13\":1}}],[\"管理工具\",{\"1\":{\"8\":1}}],[\"版本\",{\"1\":{\"8\":1}}],[\"global\",{\"1\":{\"8\":1}}],[\"执行\",{\"1\":{\"8\":1,\"9\":2}}],[\"执行命令\",{\"1\":{\"8\":1}}],[\"目录\",{\"1\":{\"8\":1}}],[\"tgz\",{\"1\":{\"8\":2}}],[\"tar\",{\"1\":{\"8\":1}}],[\"xxx\",{\"1\":{\"8\":2}}],[\"-\",{\"1\":{\"8\":4}}],[\"路径\",{\"1\":{\"8\":1,\"9\":1}}],[\"路由\",{\"1\":{\"0\":1}}],[\"path\",{\"1\":{\"9\":1}}],[\"package\",{\"1\":{\"9\":1}}],[\"pack\",{\"1\":{\"8\":1}}],[\"pnpm\",{\"0\":{\"9\":1},\"1\":{\"6\":1,\"8\":6,\"9\":7},\"2\":{\"10\":1}}],[\"npm\",{\"1\":{\"8\":2},\"2\":{\"10\":1}}],[\"not\",{\"1\":{\"6\":1,\"15\":1}}],[\"node\",{\"1\":{\"6\":3,\"8\":1}}],[\"命令\",{\"1\":{\"8\":1,\"9\":1}}],[\",\",{\"1\":{\"8\":7,\"9\":3,\"12\":1,\"13\":1},\"2\":{\"10\":1,\"14\":2}}],[\"好\",{\"1\":{\"8\":1}}],[\"基本\",{\"1\":{\"8\":1}}],[\"基于\",{\"1\":{\"6\":1,\"12\":1}}],[\"连\",{\"1\":{\"8\":1}}],[\"连接\",{\"1\":{\"6\":1}}],[\"配置\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"13\":1}}],[\"？\",{\"1\":{\"6\":1}}],[\"呢\",{\"1\":{\"6\":1}}],[\"或者\",{\"1\":{\"6\":1}}],[\"本地\",{\"1\":{\"6\":2,\"8\":2,\"9\":2}}],[\"包\",{\"1\":{\"6\":1,\"8\":5,\"9\":2}}],[\"什么\",{\"1\":{\"6\":1}}],[\"忽略\",{\"1\":{\"6\":1}}],[\"提示\",{\"1\":{\"6\":1}}],[\"依然\",{\"1\":{\"6\":1}}],[\"依赖\",{\"0\":{\"4\":1},\"1\":{\"5\":1,\"6\":4,\"8\":1,\"9\":4}}],[\"结果\",{\"1\":{\"6\":1}}],[\"最好\",{\"1\":{\"12\":1}}],[\"最终\",{\"1\":{\"6\":1}}],[\"最近\",{\"1\":{\"5\":1,\"12\":1}}],[\"主机\",{\"1\":{\"6\":1,\"8\":5,\"9\":3}}],[\"主管\",{\"1\":{\"5\":2}}],[\"移植\",{\"1\":{\"6\":1}}],[\"存在\",{\"1\":{\"6\":1}}],[\"关键\",{\"1\":{\"6\":1}}],[\"一层\",{\"1\":{\"12\":1}}],[\"一直\",{\"1\":{\"12\":1}}],[\"一种\",{\"1\":{\"6\":1,\"8\":1}}],[\"一些\",{\"1\":{\"6\":1,\"13\":1}}],[\"一个包\",{\"1\":{\"8\":2}}],[\"一个\",{\"0\":{\"4\":1},\"1\":{\"5\":1,\"8\":3,\"12\":1}}],[\"确实\",{\"1\":{\"6\":1}}],[\"也\",{\"1\":{\"6\":2,\"8\":1,\"9\":1,\"12\":2}}],[\"yaml\",{\"1\":{\"6\":1}}],[\".\",{\"1\":{\"6\":1,\"8\":2,\"9\":1}}],[\"lock\",{\"1\":{\"6\":1}}],[\"检查\",{\"1\":{\"6\":1}}],[\"信息\",{\"1\":{\"6\":3}}],[\"明明\",{\"1\":{\"6\":1}}],[\"等等\",{\"1\":{\"6\":1}}],[\"各种\",{\"1\":{\"6\":1}}],[\"中有\",{\"1\":{\"6\":1}}],[\"中\",{\"1\":{\"6\":2,\"8\":3,\"9\":4}}],[\"而且\",{\"1\":{\"6\":1,\"12\":1}}],[\"优雅\",{\"1\":{\"6\":1,\"8\":1}}],[\"优盘\",{\"1\":{\"6\":2}}],[\"很多\",{\"1\":{\"12\":1}}],[\"很\",{\"1\":{\"6\":2}}],[\"很难\",{\"1\":{\"5\":1}}],[\"不\",{\"1\":{\"8\":1}}],[\"不仅仅\",{\"1\":{\"6\":1}}],[\"不是\",{\"1\":{\"6\":1}}],[\"不然\",{\"1\":{\"5\":1}}],[\"显然\",{\"1\":{\"6\":2,\"8\":1}}],[\"了\",{\"1\":{\"6\":4,\"8\":3,\"9\":2,\"12\":4,\"13\":1}}],[\"尝试\",{\"1\":{\"6\":2}}],[\" \",{\"0\":{\"11\":1},\"1\":{\"6\":5,\"8\":10,\"9\":10,\"15\":2}}],[\"拷贝到\",{\"1\":{\"6\":1,\"8\":1}}],[\"硬件\",{\"1\":{\"6\":1}}],[\"这\",{\"1\":{\"9\":1}}],[\"这样\",{\"1\":{\"6\":2,\"8\":1,\"9\":2,\"12\":1}}],[\"这个\",{\"1\":{\"5\":1,\"6\":1,\"8\":1}}],[\"通过\",{\"0\":{\"11\":1},\"1\":{\"6\":2,\"8\":3,\"9\":2,\"12\":1,\"13\":1}}],[\"然后\",{\"1\":{\"6\":1,\"8\":1,\"9\":1}}],[\"安全\",{\"1\":{\"6\":1}}],[\"安装\",{\"0\":{\"4\":1},\"1\":{\"5\":1,\"8\":6,\"9\":5}}],[\"modules\",{\"1\":{\"6\":4}}],[\"_\",{\"1\":{\"6\":3}}],[\"能\",{\"1\":{\"6\":1}}],[\"将会\",{\"1\":{\"12\":1}}],[\"将\",{\"1\":{\"6\":2,\"8\":4,\"9\":2}}],[\"直接\",{\"1\":{\"6\":3,\"9\":2}}],[\"想到\",{\"1\":{\"6\":1,\"8\":1,\"12\":1}}],[\"首先\",{\"1\":{\"6\":1,\"8\":1,\"12\":1}}],[\"🤔\",{\"0\":{\"6\":1}}],[\"思考\",{\"0\":{\"6\":1}}],[\"。\",{\"1\":{\"5\":1,\"6\":5,\"8\":3,\"9\":3,\"12\":1,\"13\":1}}],[\"是\",{\"1\":{\"5\":1,\"6\":2,\"9\":1,\"12\":4,\"13\":1}}],[\"是否\",{\"1\":{\"5\":1}}],[\"答复\",{\"1\":{\"5\":1}}],[\"得到\",{\"1\":{\"5\":1}}],[\"淘宝\",{\"1\":{\"5\":1}}],[\"类似\",{\"1\":{\"5\":1}}],[\"源\",{\"1\":{\"5\":2}}],[\"镜像\",{\"1\":{\"5\":2,\"6\":1}}],[\"私有\",{\"1\":{\"5\":1}}],[\"建有\",{\"1\":{\"5\":1}}],[\"有时候\",{\"1\":{\"9\":1}}],[\"有没有\",{\"1\":{\"6\":1}}],[\"有\",{\"1\":{\"5\":1,\"6\":1,\"9\":1,\"12\":2,\"13\":1}}],[\"询问\",{\"1\":{\"5\":1}}],[\"上\",{\"1\":{\"5\":1,\"6\":2,\"12\":1}}],[\"需要\",{\"1\":{\"5\":1,\"8\":1,\"9\":1}}],[\"却\",{\"1\":{\"5\":1}}],[\"但是\",{\"1\":{\"5\":1,\"6\":2,\"12\":1}}],[\"）\",{\"1\":{\"5\":1,\"8\":1}}],[\"网站\",{\"0\":{\"11\":1},\"1\":{\"12\":6,\"13\":1}}],[\"网\",{\"1\":{\"5\":2}}],[\"外\",{\"1\":{\"5\":1}}],[\"（\",{\"1\":{\"5\":1,\"8\":1}}],[\"互联网\",{\"1\":{\"5\":1,\"6\":1}}],[\"到\",{\"1\":{\"5\":1,\"6\":3,\"8\":3,\"9\":2}}],[\"接入\",{\"1\":{\"5\":1}}],[\"接触\",{\"1\":{\"5\":1}}],[\"没有\",{\"1\":{\"5\":2,\"8\":1}}],[\"并且\",{\"1\":{\"5\":1,\"6\":1,\"9\":1}}],[\"并\",{\"1\":{\"5\":2,\"6\":2,\"8\":1}}],[\"电脑\",{\"1\":{\"5\":2,\"6\":2}}],[\"的话\",{\"1\":{\"12\":1}}],[\"的\",{\"0\":{\"11\":1},\"1\":{\"5\":3,\"6\":15,\"8\":12,\"9\":14,\"12\":17,\"13\":5}}],[\"分配\",{\"1\":{\"5\":1,\"12\":1}}],[\"给\",{\"0\":{\"11\":1},\"1\":{\"5\":1,\"12\":2}}],[\"高\",{\"1\":{\"5\":1}}],[\"比较\",{\"1\":{\"5\":1}}],[\"要求\",{\"1\":{\"5\":1}}],[\"数据安全\",{\"1\":{\"5\":1}}],[\"因为\",{\"1\":{\"5\":1}}],[\"项目\",{\"1\":{\"5\":2,\"6\":3,\"9\":3}}],[\"我们\",{\"1\":{\"9\":2}}],[\"我\",{\"1\":{\"5\":3,\"6\":5,\"8\":3,\"12\":7}}],[\"缘故\",{\"0\":{\"5\":1,\"12\":1}}],[\"前端\",{\"0\":{\"4\":1},\"1\":{\"9\":1}}],[\"下面\",{\"1\":{\"6\":1,\"8\":1}}],[\"下载\",{\"1\":{\"6\":2,\"8\":2,\"9\":1}}],[\"下\",{\"0\":{\"4\":1},\"1\":{\"6\":2}}],[\"环境\",{\"0\":{\"4\":1,\"8\":1},\"1\":{\"5\":1,\"8\":2}}],[\"内网\",{\"0\":{\"4\":1}}],[\"在内\",{\"1\":{\"5\":1}}],[\"在\",{\"0\":{\"4\":1},\"1\":{\"5\":1,\"8\":2,\"9\":2,\"12\":2}}],[\"随想\",{\"0\":{\"3\":1}}],[\"日志\",{\"0\":{\"2\":1}}],[\"搞机\",{\"0\":{\"2\":1}}],[\"回忆\",{\"0\":{\"1\":1}}],[\"地球\",{\"0\":{\"1\":1}}],[\"编程\",{\"0\":{\"3\":1},\"1\":{\"0\":1}}],[\"软\",{\"1\":{\"0\":1}}],[\"、\",{\"1\":{\"0\":2}}],[\"对应\",{\"1\":{\"6\":1,\"8\":2}}],[\"对\",{\"1\":{\"0\":1,\"12\":1}}],[\"，\",{\"1\":{\"0\":1,\"5\":7,\"6\":10,\"8\":10,\"9\":6,\"12\":16,\"13\":3}}],[\"瞎折腾\",{\"1\":{\"0\":1}}],[\"喜欢\",{\"1\":{\"0\":1}}],[\"介绍\",{\"0\":{\"0\":1},\"1\":{\"8\":1}}],[\"个人\",{\"0\":{\"0\":1},\"1\":{\"12\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
